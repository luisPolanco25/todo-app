{"version":3,"sources":["components/TodoAdd.js","hooks/useForm.js","components/TodoListItem.js","components/TodoList.js","components/todoReducer.js","TodoApp.js","index.js"],"names":["TodoAdd","handleAddTodo","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","useForm","description","onSubmit","e","preventDefault","trim","length","newTodo","id","Date","getTime","desc","done","type","className","placeholder","autoComplete","onChange","TodoListItem","todo","index","handleDelete","handleToggle","key","onClick","TodoList","todos","map","i","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"wMAGaA,EAAU,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,ECDrB,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAEdC,mBAASD,GAFK,mBAEnCE,EAFmC,KAE3BC,EAF2B,KAIpCC,EAAQ,WACVD,EAAUH,IAGRK,EAAoB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBH,EAAU,2BACHD,GADE,kBAEJI,EAAOC,KAAOD,EAAOE,UAM9B,MAAO,CAACN,EAAQG,EAAmBD,GDdeK,CAAQ,CACtDC,YAAa,KAHuB,mBAEhCA,EAFgC,KAEhCA,YAAcL,EAFkB,KAECD,EAFD,KAwBxC,OACI,oCACE,wCACU,6BAEA,0BAAMO,SAvBD,SAACC,GAGlB,GAFAA,EAAEC,mBAEEH,EAAYI,OAAOC,QAAU,GAAjC,CAIA,IAAMC,EAAU,CACZC,IAAI,IAAIC,MAAOC,UACfC,KAAMV,EACNW,MAAM,GAGVtB,EAAciB,GACdZ,OAUgB,2BACAkB,KAAK,OACLf,KAAK,cACLgB,UAAU,eACVC,YAAY,gCACZC,aAAa,MACbC,SAAUrB,EACVG,MAAOE,IAEX,4BACAY,KAAK,SACLC,UAAU,uCAFV,UExCPI,EAAe,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAErD,OACI,oCAEQ,wBACAC,IAAKJ,EAAKX,GACVM,UAAU,mBAEN,uBACAA,UAAS,UAAKK,EAAKP,MAAQ,YAC3BY,QAAS,kBAAMF,EAAaH,EAAKX,MAC7B,2BAAIY,EAAQ,EAAZ,KAHJ,IAGyBD,EAAKR,MAE9B,4BACAG,UAAU,iBACVU,QAAS,kBAAMH,EAAaF,EAAKX,MAFjC,aCbPiB,EAAW,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,MAAOL,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAE3C,OACI,wBAAIR,UAAU,+BAENY,EAAMC,KAAI,SAACR,EAAMS,GAAP,OACV,kBAAC,EAAD,CACIL,IAAKJ,EAAKX,GACVW,KAAMA,EACNC,MAAOQ,EACPP,aAAcA,EACdC,aAAcA,S,OCZrBO,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAE/C,OAAQA,EAAOlB,MAEX,IAAK,MACD,MAAM,GAAN,mBAAWiB,GAAX,CAAkBC,EAAOC,UAE7B,IAAK,SACD,OAAOF,EAAMG,QAAO,SAAAd,GAAI,OAAIA,EAAKX,KAAOuB,EAAOC,WAEnD,IAAK,SACD,OAAOF,EAAMH,KAAI,SAAAR,GAAI,OAChBA,EAAKX,KAAOuB,EAAOC,QAApB,YAAC,eACSb,GADV,IACgBP,MAAOO,EAAKP,OACtBO,KAGd,QACI,OAAOW,ICdbI,G,MAAO,WAET,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,KAI3CC,EAAU,WAAO,IAAD,EAECC,qBAAWX,EAAa,GAAIK,GAF7B,mBAElBR,EAFkB,KAEXe,EAFW,KAIzBC,qBAAU,WACNL,aAAaM,QAAQ,QAASR,KAAKS,UAAUlB,MAC9C,CAACA,IA4BJ,OAEI,6BACI,wCAAcA,EAAMpB,OAApB,KACA,6BAEA,yBAAKQ,UAAU,OACX,yBAAKA,UAAU,SACZ,kBAAC,EAAD,CACKY,MAAOA,EACPL,aApCC,SAACwB,GAOlBJ,EALe,CACX5B,KAAM,SACNmB,QAASa,KAiCGvB,aA3BC,SAACuB,GAClBJ,EAAS,CACL5B,KAAM,SACNmB,QAASa,QA2BL,yBAAK/B,UAAU,SACX,kBAAC,EAAD,CACIxB,cAzBE,SAACiB,GAEnBkC,EAAS,CACL5B,KAAM,MACNmB,QAASzB,WCpCrBuC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.486ce107.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const TodoAdd = ({handleAddTodo}) => {\r\n    \r\n    const [{description}, handleInputChange, reset] = useForm({\r\n        description: '',\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (description.trim().length <= 1) {\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false,\r\n        }\r\n\r\n        handleAddTodo(newTodo);\r\n        reset();\r\n\r\n    }\r\n    \r\n    return (\r\n        <>\r\n          <h4>Add todo</h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Type what needs to be done...\"\r\n                        autoComplete=\"off\"\r\n                        onChange={handleInputChange}\r\n                        value={description}\r\n                        />\r\n                    <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary mt-1 col-12\"\r\n                    >\r\n                        Add\r\n                    </button>\r\n                    </form>  \r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    }\r\n    \r\n\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React from 'react';\r\n\r\nexport const TodoListItem = ({todo, index, handleDelete, handleToggle}) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <li\r\n                key={todo.id}\r\n                className=\"list-group-item\"\r\n                >\r\n                    <p \r\n                    className={`${todo.done && 'complete'}`}\r\n                    onClick={() => handleToggle(todo.id)}>\r\n                        <b>{index + 1}.</b> {todo.desc}\r\n                    </p>\r\n                    <button \r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => handleDelete(todo.id)}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            } \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\nexport const TodoList = ({todos, handleDelete, handleToggle}) => {\r\n\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n            {\r\n                todos.map((todo, i) => (\r\n                <TodoListItem \r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    index={i}\r\n                    handleDelete={handleDelete}\r\n                    handleToggle={handleToggle} \r\n                />\r\n                ))\r\n            }\r\n        </ul>\r\n    )        \r\n}\r\n","\r\n\r\nexport const todoReducer = (state = [], action) => {\r\n    \r\n    switch (action.type) {\r\n        \r\n        case 'add':\r\n            return [...state, action.payload];\r\n            \r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n            \r\n        case 'toggle':\r\n            return state.map(todo =>\r\n                (todo.id === action.payload)\r\n                    ? {...todo, done: !todo.done}\r\n                    : todo                \r\n            )\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import React, { useEffect, useReducer } from 'react';\r\nimport { TodoAdd } from './components/TodoAdd';\r\nimport { TodoList } from './components/TodoList';\r\nimport { todoReducer } from './components/todoReducer';\r\nimport './styles.css';\r\n\r\nconst init = () => {\r\n\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n\r\n}\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    const handleDelete = (todoId) => {\r\n        \r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId,\r\n        }\r\n\r\n        dispatch(action);\r\n    }\r\n\r\n    const handleToggle = (todoId) => {\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId,\r\n        })\r\n    }\r\n\r\n    const handleAddTodo = (newTodo) => {\r\n\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo,\r\n        });\r\n\r\n    }\r\n        \r\n    return (\r\n        \r\n        <div>\r\n            <h1>TodoApp ({todos.length})</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                   <TodoList\r\n                        todos={todos}\r\n                        handleDelete={handleDelete}\r\n                        handleToggle={handleToggle}\r\n                   />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                    <TodoAdd\r\n                        handleAddTodo={handleAddTodo} \r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './TodoApp'; //Todo APP\n\n\nReactDOM.render(\n    <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}